{"version":3,"file":"placestore.min.js","sources":["../src/placestore.js"],"sourcesContent":["let placestore = {\n    version: 2022111101,\n    id: 0,\n    places: [],\n    paths: [],\n    startingplaces: [],\n    targetplaces: [],\n    placecolor: '#c01c28',\n    strokecolor: '#ffffff',\n    strokeopacity: 1,\n    visitedcolor: '#26a269',\n    height: 100,\n    width: 800,\n    hidepaths: false,\n    mapid: '',\n    usecheckmark: false,\n    editmode: true,\n    pulse: false,\n    hover: false,\n    showall: false,\n    /**\n     * Loads attributes from JSON into placestore\n     * @param {*} json\n     */\n    loadJSON: function(json) {\n        try {\n            let fromjson = JSON.parse(json);\n            Object.assign(this, fromjson);\n            // eslint-disable-next-line no-empty\n        } catch { }\n        // Update version (only relevant if learning map is saved)\n        this.version = 2022111101;\n    },\n    /**\n     * Returns placestore as a JSON string ()\n     * @returns {string}\n     */\n    buildJSON: function() {\n        return JSON.stringify(this.getPlacestore());\n    },\n    /**\n     * Adds a place. If it is the only place, it is set as starting place\n     * @param {*} id id of the place\n     * @param {*} linkId id of the corresponding link\n     * @param {*} linkedActivity course module id of linked activity\n     */\n    addPlace: function(id, linkId, linkedActivity = null) {\n        this.places.push({\n            id: id,\n            linkId: linkId,\n            linkedActivity: linkedActivity,\n            placecolor: null,\n            visitedcolor: null\n        });\n        if (this.places.length == 1) {\n            this.addStartingPlace(id);\n        }\n        this.id++;\n    },\n    /**\n     * Removes a place\n     * @param {*} id id of the place\n     */\n    removePlace: function(id) {\n        this.removeStartingPlace(id);\n        this.removeTargetPlace(id);\n        this.places = this.places.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Adds a place to the array of starting places\n     * @param {*} id id of the place\n     */\n    addStartingPlace: function(id) {\n        this.startingplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of starting places\n     * @param {*} id id of the place\n     */\n    removeStartingPlace: function(id) {\n        this.startingplaces = this.startingplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of starting places\n     * @param {*} id id of the place\n     * @returns {boolean}\n     */\n    isStartingPlace: function(id) {\n        return this.startingplaces.includes(id);\n    },\n    /**\n     * Adds a place to the array of target places\n     * @param {*} id id of the place\n     */\n    addTargetPlace: function(id) {\n        this.targetplaces.push(id);\n    },\n    /**\n     * Removes a place from the array of target places\n     * @param {*} id id of the place\n     */\n    removeTargetPlace: function(id) {\n        this.targetplaces = this.targetplaces.filter(\n            function(e) {\n                return e != id;\n            }\n        );\n    },\n    /**\n     * Returns whether a place is in the array of target places\n     * @param {number} id id of the place\n     * @returns {boolean}\n     */\n    isTargetPlace: function(id) {\n        return this.targetplaces.includes(id);\n    },\n    /**\n     * Adds a path between two places\n     * @param {*} pid id of the path\n     * @param {*} fid id of the first place\n     * @param {*} sid id of the second place\n     */\n    addPath: function(pid, fid, sid) {\n        this.paths.push({\n            id: pid,\n            fid: fid,\n            sid: sid,\n            strokecolor: null,\n            strokedasharray: null,\n            hidepath: null\n        });\n    },\n    /**\n     * Removes a path\n     * @param {*} id id of the place\n     */\n    removePath: function(id) {\n        this.paths = this.paths.filter(\n            function(p) {\n                return p.id != id;\n            }\n        );\n    },\n    /**\n     * Returns an array of paths touching a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getTouchingPaths: function(id) {\n        return this.paths.filter(\n            function(p) {\n                return p.fid == id || p.sid == id;\n            }\n        );\n    },\n    /**\n     * Returns the course module id linked to a place\n     * @param {*} id id of the place\n     * @returns {number} id of the linked course module\n     */\n    getActivityId: function(id) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            return place[0].linkedActivity;\n        } else {\n            return null;\n        }\n    },\n    /**\n     * Sets the id of the linked course module\n     * @param {*} id id of the place\n     * @param {*} linkedActivity course module id\n     */\n    setActivityId: function(id, linkedActivity) {\n        let place = this.places.filter(\n            function(e) {\n                return id == e.id;\n            }\n        );\n        if (place.length > 0) {\n            place[0].linkedActivity = linkedActivity;\n        }\n    },\n    /**\n     * Sets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @param {*} color color in hex format\n     */\n    setColor: function(type, color) {\n        switch (type) {\n            case 'stroke':\n                this.strokecolor = color;\n                break;\n            case 'place':\n                this.placecolor = color;\n                break;\n            case 'visited':\n                this.visitedcolor = color;\n                break;\n        }\n    },\n    /**\n     * Gets the color of 'stroke', 'place' or 'visited'\n     * @param {*} type type of the color\n     * @returns {string} color in hex format\n     */\n    getColor: function(type) {\n        switch (type) {\n            case 'stroke':\n                return this.strokecolor;\n            case 'place':\n                return this.placecolor;\n            case 'visited':\n                return this.visitedcolor;\n        }\n        return null;\n    },\n    /**\n     * Returns the current id\n     * @returns {number}\n     */\n    getId: function() {\n        return this.id;\n    },\n    /**\n     * Sets the dimensions of the background image\n     * @param {*} width\n     * @param {*} height\n     */\n    setBackgroundDimensions: function(width, height) {\n        this.width = width;\n        this.height = height;\n    },\n    /**\n     * Returns all paths starting at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithFid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.fid == id;\n        });\n    },\n    /**\n     * Returns all paths ending at a place\n     * @param {*} id id of the place\n     * @returns {array}\n     */\n    getPathsWithSid: function(id) {\n        return this.paths.filter(function(p) {\n            return p.sid == id;\n        });\n    },\n    /**\n     * Returns the attributes of placestore\n     * @returns {object}\n     */\n    getPlacestore: function() {\n        return {\n            id: this.id,\n            places: this.places,\n            paths: this.paths,\n            startingplaces: this.startingplaces,\n            targetplaces: this.targetplaces,\n            placecolor: this.placecolor,\n            strokecolor: this.strokecolor,\n            strokeopacity: this.strokeopacity,\n            visitedcolor: this.visitedcolor,\n            height: this.height,\n            width: this.width,\n            hidepaths: this.hidepaths,\n            mapid: this.mapid,\n            usecheckmark: this.usecheckmark,\n            editmode: this.editmode,\n            version: this.version,\n            pulse: this.pulse,\n            hover: this.hover,\n            showall: this.showall\n        };\n    },\n    /**\n     * Sets hidepaths attribute\n     * @param {boolean} value\n     */\n    setHidePaths: function(value) {\n        this.hidepaths = value;\n    },\n    /**\n     * Returns the value of hidepaths attribute\n     * @returns {boolean}\n     */\n    getHidePaths: function() {\n        return this.hidepaths;\n    },\n    /**\n     * Sets pulse attribute\n     * @param {boolean} value\n     */\n    setPulse: function(value) {\n        this.pulse = value;\n    },\n    /**\n     * Returns the value of pulse attribute\n     * @returns {boolean}\n     */\n    getPulse: function() {\n        return this.pulse;\n    },\n    /**\n     * Sets hover attribute\n     * @param {boolean} value\n     */\n    setHover: function(value) {\n        this.hover = value;\n    },\n    /**\n     * Returns the value of hover attribute\n     * @returns {boolean}\n     */\n    getHover: function() {\n        return this.hover;\n    },\n    /**\n     * Sets showall attribute\n     * @param {boolean} value\n     */\n    setShowall: function(value) {\n        this.showall = value;\n    },\n    /**\n     * Returns the value of showall attribute\n     * @returns {boolean}\n     */\n    getShowall: function() {\n        return this.showall;\n    },\n    /**\n     * Returns the mapid\n     * @returns {string}\n     */\n    getMapid: function() {\n        return this.mapid;\n    },\n    /**\n     * Returns the value of usecheckmark attribute\n     * @returns {boolean}\n     */\n    getUseCheckmark: function() {\n        return this.usecheckmark;\n    },\n    /**\n     * Sets the value of usecheckmark attribute\n     * @param {boolean} value\n     */\n    setUseCheckmark: function(value) {\n        this.usecheckmark = value;\n    },\n    /**\n     * Returns an array with all activity ids\n     * @returns {array}\n     */\n    getAllActivities: function() {\n        let activities = [];\n        this.places.forEach(function(p) {\n            if (p.linkedActivity) {\n                activities.push(p.linkedActivity);\n            }\n        });\n        return activities;\n    },\n    /**\n     * Sets stroke opacity\n     * @param {number} value\n     */\n     setStrokeOpacity: function(value) {\n        this.strokeopacity = value;\n    },\n    /**\n     * Returns the current stroke opacity\n     * @returns {number}\n     */\n    getStrokeOpacity: function() {\n        return this.strokeopacity;\n    }\n};\n\nexport default placestore;"],"names":["placestore","version","id","places","paths","startingplaces","targetplaces","placecolor","strokecolor","strokeopacity","visitedcolor","height","width","hidepaths","mapid","usecheckmark","editmode","pulse","hover","showall","loadJSON","json","fromjson","JSON","parse","Object","assign","this","buildJSON","stringify","getPlacestore","addPlace","linkId","linkedActivity","push","length","addStartingPlace","removePlace","removeStartingPlace","removeTargetPlace","filter","p","e","isStartingPlace","includes","addTargetPlace","isTargetPlace","addPath","pid","fid","sid","strokedasharray","hidepath","removePath","getTouchingPaths","getActivityId","place","setActivityId","setColor","type","color","getColor","getId","setBackgroundDimensions","getPathsWithFid","getPathsWithSid","setHidePaths","value","getHidePaths","setPulse","getPulse","setHover","getHover","setShowall","getShowall","getMapid","getUseCheckmark","setUseCheckmark","getAllActivities","activities","forEach","setStrokeOpacity","getStrokeOpacity"],"mappings":"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"}